using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml.Linq;
using static System.Net.Mime.MediaTypeNames;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;

namespace EmbeddedProject
{
    public partial class Form1 : Form
    {
        int startflag = 0;
        int flag_sensor;
        string RxString;
        string temp, motion, door;
        char charb = 'B';
        

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            if(serialPort1.IsOpen)
                serialPort1.Close();
            serialPort1.PortName = "COM3";
            serialPort1.BaudRate = 115200;
        }

        private void serial_start_Click(object sender, EventArgs e)
        {
            serialPort1.PortName = "COM3";
            serialPort1.BaudRate = 115200;
            serialPort1.Open();
            if (serialPort1.IsOpen)
            {

                textBox1.ReadOnly = false;
            }
        }

        private void serial_stop_Click(object sender, EventArgs e)
        {
            serialPort1.Close();
            textBox1.ReadOnly = true;
        }

        private void read_TS_Click(object sender, EventArgs e)
        {
            WebClient client = new WebClient();

            label1.Text = client.DownloadString("http://api.thingspeak.com/channels/1963978/field/field1/last.text");//use your channel id
        }

        private void current_data_Click(object sender, EventArgs e)
        {
            textBox1.Text=(RxString);
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            if (!string.Equals(textBox1.Text, ""))
            {
                if (serialPort1.IsOpen) serialPort1.Close();
                try
                {
                    int index = textBox1.Text.IndexOf('B');
                    string data = textBox1.Text.Substring(index, 5);

                    
                    const string WRITEKEY = "AC6XVW7INPG6S8YJ";
                    string strUpdateBase = "http://api.thingspeak.com/update";
                    string strUpdateURI = strUpdateBase + "?key=" + WRITEKEY;
                    string strField1 = data[1].ToString();
                    string strField2 = data[2].ToString();
                    string strField3 = data[3].ToString() + data[4].ToString();
                    HttpWebRequest ThingsSpeakReq;
                    HttpWebResponse ThingsSpeakResp;

                    strUpdateURI += "&field1=" + strField1;
                    strUpdateURI += "&field2=" + strField2;
                    strUpdateURI += "&field3=" + strField3;

                    ThingsSpeakReq = (HttpWebRequest)WebRequest.Create(strUpdateURI);
                    ThingsSpeakResp = (HttpWebResponse)ThingsSpeakReq.GetResponse();
                    ThingsSpeakResp.Close();
                    if (!(string.Equals(ThingsSpeakResp.StatusDescription, "OK")))
                    {
                        Exception exData = new Exception(ThingsSpeakResp.StatusDescription);
                        throw exData;
                    }

                }
                catch (Exception ex)
                {
                }
                textBox1.Text = "";
                serialPort1.Open();
            }
        }


        private void SerialPort1_DataReceived(object sender, System.IO.Ports.SerialDataReceivedEventArgs e)
        {
            //Console.WriteLine("Data Received");
            RxString = serialPort1.ReadExisting();
            Console.WriteLine(RxString);
            this.Invoke(new EventHandler(current_data_Click));
        }
    }
}
